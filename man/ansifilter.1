.TH ansifilter 1 "2023-01-08" "Andre Simon" "user documentation"

.SH NAME
Ansifilter - ANSI escape code processor and converter

.SH SYNOPSIS
.B ansifilter
[d:i:F:m:o:r:s:e:fhptvHRT] [-i input file] [-o output file] [--text] [--html] [--latex] [--tex] [--rtf] [input files]

.SH DESCRIPTION
.B Ansifilter
is a small utility to handle text files containing ANSI terminal
escape codes. The command sequences may be stripped or be interpreted to
generate formatted output (HTML, LaTeX, TeX, RTF).
.PP
See the README file for details.
.SH File options

.IP "\fB-i\fR, \fB--input\fR=<\fIfile\fR> (default stdin)"
Name of input file
.IP "\fB-o\fR, \fB--output\fR=<\fIfile\fR> (default stdout)"
Name of output file
.IP "\fB-O\fR, \fB--outdir\fR=<\fIdir\fR>"
Name of output directory
.IP "\fB-t\fR, \fB--tail\fR"
Continue reading after end-of-file (like tail -f). Use system tail if available.
.IP "\fB-x\fR, \fB--max-size\fR=<\fIsize\fR>"
Set maximum input file size (examples: 512M, 1G; default: 256M)

.SH Output formats
.IP "\fB-T\fR, \fB--text\fR"
Output text (default)
.IP "\fB-H\fR, \fB--html\fR"
Output HTML
.IP "\fB-M\fR, \fB--pango\fR"
Output Pango markup
.IP "\fB-L\fR, \fB--latex\fR"
Output LaTeX
.IP "\fB-P\fR, \fB--tex\fR"
Output Plain TeX
.IP "\fB-R\fR, \fB--rtf\fR"
Output RTF
.IP "\fB-B\fR, \fB--bbcode\fR"
Output BBCode
.IP "\fB-S\fR, \fB--svg\fR"
Output SVG

.SH Format options
.IP "\fB-a\fR, \fB--anchors\fR(=\fIself\fR)"
Add HTML line anchors (opt: self referencing, assumes -l)
.IP "\fB-d\fR, \fB--doc-title\fR"
Set HTML/LaTeX/SVG document title
.IP "\fB-f\fR, \fB--fragment\fR"
Omit HTML header and footer
.IP "\fB-F\fR, \fB--font\fR=<\fIfont\fR>"
Set HTML/RTF/SVG font face
.IP "\fB-k\fR, \fB--ignore-clear\fR(=\fIfalse\fR)"
Do not adhere to clear (ESC K) commands (default: true)
.IP "\fB-c\fR, \fB--ignore-csi\fR"
Do not adhere to CSI commands (useful for UTF-8 input)
.IP "\fB-l\fR, \fB--line-numbers\fR"
Print line numbers in output file
.IP "\fB-m\fR, \fB--map\fR=<\fIpath\fR>"
Read color mapping file (see README)
.IP "\fB-r\fR, \fB--style-ref\fR=<\fIrf\fR>"
Set HTML/TeX/LaTeX/SVG stylesheet path
.IP "\fB-s\fR, \fB--font-size\fR=<\fInum\fR>"
Set HTML/RTF/SVG font size
.IP "\fB-e\fR, \fB--encoding\fR=<\fIenc\fR>"
Set HTML encoding (must match input file encoding); omit encoding information if enc=NONE
.IP "\fB-p\fR, \fB--plain\fR"
Ignore ANSI formatting information
.IP "\fB-w\fR, \fB--wrap\fR=<\fIlen\fR>"
Wrap long lines
.IP "\fB--no-trailing-nl\fR"
Omit trailing newline
.IP "\fB--no-version-info\fR"
Omit version info comment
.IP "\fB--wrap-no-numbers\fR"
Omit line numbers of wrapped lines (assumes -l)
.IP "\fB--derived-styles\fR"
Output dynamic stylesheets (HTML/SVG)

.SH ASCII art options
.IP "\fB--art-cp437\fR"
Parse codepage 437 ASCII art (HTML and RTF output)
.IP "\fB--art-bin\fR"
Parse BIN/XBIN ASCII art  (HTML output, no stdin)
.IP "\fB--art-tundra\fR"
Parse Tundra ANSI art  (HTML output, no stdin)
.IP "\fB--art-width\fR"
Set ASCII art width (default 80)
.IP "\fB--art-height\fR"
Set ASCII art height (default 150)

.SH "OTHER OPTIONS"
.IP "\fB-h\fR, \fB--help\fR"
print help
.IP "\fB-v\fR, \fB--version\fR"
print version and license info

.PP
If no in- or output files are specified, stdin and stdout will be used for  in- or output.
Plain text will be generated, if no output format is given.
Parsing XBIN files overrides --art-width, --art-height and --map options.
The ANSI art file formats BIN, XBIN and TND cannot be read from stdin.

.SH Examples
File conversions:
.PP
ansifilter -i text_with_ansi.txt -o text_without_ansi.txt
.PP
tail -f server.log | ansifilter
.PP
ansifilter *.txt

.SH AUTHORS
Andre Simon <a.simon@mailbox.org>
.SH SEE ALSO
More information at http://www.andre-simon.de/.
